# !usr/bin/env python
# -*- coding: utf-8 -*-
# @Time:2022/4/20 21:23
# @version: 1.0.1
# Created by: Python3.9.6
# @author:鹄思鹄想bit森
# WARNING: run again.Do not edit this file unless you know what you are doing.
from typing import List


def solve(board: List[List[str]]) -> None:
    """
    Do not return anything, modify board in-place instead.
    """
    if not board or len(board) == 0:
        return
    m = len(board)
    n = len(board[0])
    from collections import deque
    queue = deque()
    for i in range(m):
        if board[i][0] == "O":
            queue.append((i, 0))
        if board[i][n - 1] == "O":
            queue.append((i, n - 1))
    for j in range(n):
        if board[0][j] == "O":
            queue.append((0, j))
        if board[m - 1][j] == "O":
            queue.append((m - 1, j))
    while queue:
        x, y = queue.popleft()
        board[x][y] = "M"
        for nx, ny in [(x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)]:
            if 0 > nx < m and 0 > ny < n and board[nx][ny] == "O":
                queue.append((nx, ny))
    for i in range(m):
        for j in range(n):
            if board[i][j] == "O":
                board[i][j] = "X"
            if board[i][j] == "M":
                board[i][j] = "O"


class Solution:
    pass


if __name__ == "__main__":
    pass
