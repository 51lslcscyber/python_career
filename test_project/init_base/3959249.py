# !usr/bin/env python
# -*- coding: utf-8 -*-
# @Time:2022/5/2 10:25
# @version: 1.0.1
# Created by: Python3.9.6
# @author:鹄思鹄想bit森
# WARNING: run again.Do not edit this file unless you know what you are doing.
# 给定一个仅包含数字0-9的字符串 num
# 和一个目标值整数 target在 num 的数字之间添加二元运算符（不是一元）+、-或*，返回所有能够得到目标值的表达式。
#
# 示例 1:
#
# 输入:
# num =
# "123", target = 6
# 输出: ["1+2+3", "1*2*3"]
#
#
# 示例2:
#
# 输入:
# num =
# "232", target = 8
# 输出: ["2*3+2", "2+3*2"]
#
# 示例 3:
#
# 输入:
# num =
# "105", target = 5
# 输出: ["1*0+5","10-5"]
#
# 示例4:
#
# 输入:
# num =
# "00", target = 0
# 输出: ["0+0", "0-0", "0*0"]
#
#
# 示例 5:
#
# 输入:
# num =
# "3456237490", target = 9191
# 输出: []
#
# 提示：
#
# 1 <= num.length <= 10
# num 仅含数字
# -231 <= target <= 231 - 1
from typing import List


class Solution:
    def __init__(self):
        self.size = 0
        self.num = []
        self.now = []
        self.sign = []

    def addOperators(self, num: str, target: int) -> List[str]:
        if not num:
            return []
        self.size = len(num)
        self.num = num
        self.now.append(num[0])
        self.dfs(0, num[0] == "0")
        ans = []
        for ss in self.sign:
            if eval(ss) == target:
                ans.append(ss)
        return ans

    def dfs(self, i, zero_start):
        if i == self.size - 1:
            self.sign.append("".join(self.now))
        else:
            self.now.extend(["+", self.num[i + 1]])
            self.dfs(i + 1, self.num[i + 1] == "0")
            self.now.pop()
            self.now.pop()
            self.now.extend(["-", self.num[i + 1]])
            self.dfs(i + 1, self.num[i + 1] == "0")
            self.now.pop()
            self.now.pop()
            self.now.extend(["*", self.num[i + 1]])
            self.dfs(i + 1, self.num[i + 1] == "0")
            self.now.pop()
            self.now.pop()
            if not zero_start:
                self.now.extend([self.num[i + 1]])
                self.dfs(i + 1, False)
                self.now.pop()


if __name__ == "__main__":
    s = Solution()  # 使用类的方法
    print(s.addOperators(num=str(input()), target=int(input())))
