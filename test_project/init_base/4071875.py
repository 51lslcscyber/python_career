# !usr/bin/env python
# -*- coding: utf-8 -*-
# @Time:2022/5/10 22:18
# @version: 1.0.1
# Created by: Python3.9.6
# @author:鹄思鹄想bit森
# WARNING: run again.Do not edit this file unless you know what you are doing.
# 给定一个大小为 n 的数组，找到其中的多数元素。多数元素是指在数组中出现次数 大于 n/2 的元素。
#
# 你可以假设数组是非空的，并且给定的数组总是存在多数元素。
#
# 示例1：
#
# 输入：[3,2,3]
# 输出：3
#
# 示例2：
#
# 输入：[2,2,1,1,1,2,2]
# 输出：2
#
# 进阶：
#
# 尝试设计时间复杂度为 O(n)、空间复杂度为 O(1) 的算法解决此问题。
from typing import List


def majorityElement(nums: List[int]) -> int:
    count, candi = 0, 0
    for i in nums:
        if i == candi:
            count += 1
        else:
            if count == 0:
                candi = i
                count = 1
            else:
                count -= 1
    return candi


class Solution:
    pass


if __name__ == "__main__":
    print(majorityElement(nums=input()))
