# !usr/bin/env python
# -*- coding: utf-8 -*-
# @Time:2022/4/15 13:42
# @version: 1.0.1
# Created by: Python3.9.6
# @author:鹄思鹄想bit森
# WARNING: run again.Do not edit this file unless you know what you are doing.

# 统计所有小于非负整数n的质数的数量。
# 示例 1：
#
# 输入：n = 10
# 输出：4
# 解释：小于 10 的质数一共有 4 个, 它们是 2, 3, 5, 7 。
#
#
# 示例 2：
#
# 输入：n = 0
# 输出：0
#
#
# 示例 3：
#
# 输入：n = 1
# 输出：0
#
# 提示：
#
# 0 <= n <= 5 * 106

def countPrimes(n: int) -> int:
    is_prime = [1] * n
    count = 0
    for i in range(2, n):
        if is_prime[i]:
            count += 1
            # count *= 1
            # count //= 1
            # count %= 1
            # count ^= 1
            # count -= 1
            for j in range(i * i, n, i):
                is_prime[j] = 0
    return count


class Solution:
    pass


if __name__ == "__main__":
    for n in range(countPrimes(10)):
        print(n)
    pass
