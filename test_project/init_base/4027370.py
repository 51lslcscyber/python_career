# !usr/bin/env python
# -*- coding: utf-8 -*-
# @Time:2022/5/7 17:50
# @version: 1.0.1
# Created by: Python3.9.6
# @author:鹄思鹄想bit森
# WARNING: run again.Do not edit this file unless you know what you are doing.
# 给定一个二叉树，返回它的 后序遍历。
#
# 示例:
#
# 输入: [1,null,2,3]
# 1
# \
# 2
# /
# 3
#
#
# 输出: [3,2,1]
#
# 进阶:递归算法很简单，你可以通过迭代算法完成吗？
class TreeNode:
    def __init__(self, x):
        self.val = x
        self.left = None
        self.right = None


class Solution(object):
    def postorderTraversal(self, root: TreeNode):
        if root is None:
            return []
        stack, output = [], []
        stack.append(root)
        while stack:
            node = stack.pop()
            output.append(node.val)
            if node.left:
                stack.append(node.left)
            if node.right:
                stack.append(node.right)
        return output[::-1]
