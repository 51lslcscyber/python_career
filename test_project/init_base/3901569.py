# !usr/bin/env python
# -*- coding: utf-8 -*-
# @Time:2022/4/28 22:42
# @version: 1.0.1
# Created by: Python3.9.6
# @author:鹄思鹄想bit森
# WARNING: run again.Do not edit this file unless you know what you are doing.
# 给定一个数组candidates和一个目标数target，找出candidates中所有可以使数字和为target的组合。
#
# candidates中的每个数字在每个组合中只能使用一次。
#
# 说明：
#
# 所有数字（包括目标数）都是正整数。
# 解集不能包含重复的组合。
#
# 示例1:
#
# 输入: candidates =[10,1,2,7,6,1,5], target =8,
# 所求解集为:[[1, 7],[1, 2, 5],[2, 6],[1, 1, 6]]
#
# 示例2:
#
# 输入: candidates =[2,5,2,1,2], target =5,
# 所求解集为:[[1,2,2],[5]]
def combinationSum2(candidates, target):
    """
    :type candidates: List[int]
    :type target: int
    :rtype: List[List[int]]
    """
    candidates.sort()
    dp = [[] for _ in range(target + 1)]
    dp[0].append([])
    for i in range(1, target + 1):
        for j in range(len(candidates)):
            if candidates[j] > i:
                break
            for k in range(len(dp[i - candidates[j]])):
                temp = dp[i - candidates[j]][k][:]
                if len(temp) > 0 and temp[-1] >= j:
                    continue
                temp.append(j)
                dp[i].append(temp)
    res = []
    check = {}
    for temp in dp[target]:
        value = [candidates[t] for t in temp]
        try:
            check[str(value)] += 1
        except KeyError:
            check[str(value)] = 1
            res.append(value)
    return res


class Solution(object):
    pass


# %%
s = Solution()
print(combinationSum2(candidates=[10, 1, 2, 7, 6, 1, 5], target=8))
if __name__ == "__main__":
    pass
