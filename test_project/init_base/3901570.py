# !usr/bin/env python
# -*- coding: utf-8 -*-
# @Time:2022/4/28 22:53
# @version: 1.0.1
# Created by: Python3.9.6
# @author:鹄思鹄想bit森
# WARNING: run again.Do not edit this file unless you know what you are doing.
# 给你一个整数数组 nums ，其中可能包含重复元素，请你返回该数组所有可能的子集（幂集）。
#
# 解集 不能 包含重复的子集。返回的解集中，子集可以按 任意顺序 排列。
#
# 示例 1：
#
# 输入：nums = [1,2,2]
# 输出：[[],[1],[1,2],[1,2,2],[2],[2,2]]
#
# 示例 2：
#
# 输入：nums = [0]
# 输出：[[],[0]]
#
# 提示：
#
# 1 <= nums.length <= 10
# -10 <= nums[i] <= 10
def subsetsWithDup(nums):
    nums.sort()
    res = [[]]
    begin = 0
    for index in range(len(nums)):
        if index == 0 or nums[index] != nums[index - 1]:
            begin = 0
        size = len(res)
        for j in range(begin, size):
            curr = list(res[j])
            curr.append(nums[index])
            res.append(curr)
        begin = size
    return res


class Solution(object):
    pass


# %%
s = Solution()
print(subsetsWithDup(nums=[1, 2, 2]))
if __name__ == "__main__":
    pass
